            关于socket.send()构造http数据包的一点总结
首先放出发送并接收成功的代码如下：
s.send(b'GET / HTTP/1.1\r\nHost: webcode.me\r\nAccept: text/html\r\nConnection: close\r\n\r\n')
现在我们从上面提取出标准格式，即：
'GET / HTTP/1.1\r\nHost: webcode.me\r\nConnection: close\r\n\r\n' 这样
对，正如所看到的，最后结尾必须要有\r\n\r\n，每个字段中间由\r\n隔开，多一个空格都不行！比如
'GET / HTTP/1.1\r\n Host: webcode.me\r\n\r\n'，这就是错的！为啥？因为Host前面多了一个空格！

但是当字段多了的时候，比如我想加上user-agent,referer,Accept-language，那不一行爆满了吗？python美观要求
一行不多于70个字。所以我想分开写，这样更美观
首先：定义一个跨越多行的字符串有三种方法,尝试如下：
（1）使用三引号
（2）使用反斜杠
（3）使用小括号

下面是尝试n多次后正确的方式:
（1）使用三引号：
首先根据PEP-8规范，三引号最美观写法是这样：
'''sdadas
sdada
sdasd
'''
所以我们就按上面的写法来写：
b'''GET / HTTP/1.1\r
Host: webcode.me\r
Accept: text/html\r
Connection: close\r\n\r
'''
记得前面加b哦！

注意：三引号定义多行空格字符串时，敲的空格都要算进去，特别是在一行末尾多敲了一个空格都要算进去，而且这种还不容易被注意到。
（2）使用反斜杠
b'GET / HTTP/1.1\r\n\
Host: webcode.me\r\n\
Accept: text/html\r\n\
Connection: close\r\n\r\n'
(3)使用小括号
(b'GET / HTTP/1.1\r\n'
b'Host: webcode.me\r\n'
b'Accept: text/html\r\n'
b'Connection: close\r\n\r\n')


扩展写法：
首先字符串类型要转换为bytes类型，目前我知道三种：
（1）直接在字符串前面加上b，比如b'', b"", b""""""
（2）使用字符串对象的方法encode()，比如str.encode("utf-8")
（3）使用内置函数bytes()，比如bytes(str, encoding="utf-8")
所以能扩展好几种，这里列举两种：
bytes(('GET / HTTP/1.1\r\n'
'Host: webcode.me\r\n'
'Accept: text/html\r\n'
'Connection: close\r\n\r\n'), encoding="utf-8")

'GET / HTTP/1.1\r\n\
Host: webcode.me\r\n\
Accept: text/html\r\n\
Connection: close\r\n\r\n'.encode("utf-8")

后续添加：
发送一个http报文最少需要注明请求方式，协议类型，版本，主机名，主机名是为了解析IP地址
GET / HTTP/1.1
Host: httpbin.org

